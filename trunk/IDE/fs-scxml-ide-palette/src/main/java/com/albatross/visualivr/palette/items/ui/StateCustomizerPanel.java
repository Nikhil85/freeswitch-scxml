/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * StateCustomizerPanel.java
 *
 * Created on 2011-jan-06, 18:44:18
 */
package com.albatross.visualivr.palette.items.ui;

import org.apache.commons.scxml.io.SCXMLSerializer;
import org.apache.commons.scxml.model.Log;
import org.apache.commons.scxml.model.OnEntry;
import org.apache.commons.scxml.model.OnExit;
import org.apache.commons.scxml.model.Parallel;
import org.apache.commons.scxml.model.State;
import org.apache.commons.scxml.model.TransitionTarget;

/**
 *
 * @author joe
 */
public class StateCustomizerPanel extends javax.swing.JPanel {

    public static final int PARALLEL = 0;
    public static final int STATE = 1;
    private final int type;

    /** Creates new form StateCustomizerPanel */
    public StateCustomizerPanel(int type) {
        this.type = type;
        
        if(type != PARALLEL && type != STATE) {
            throw new IllegalArgumentException("Unknown scxml transition target");
        }
        
        initComponents();
    }

    public String getXml() {

        TransitionTarget target;

        if (type == STATE) {
            target = new State();

        } else {
            target = new Parallel();
        }

        final String id = idTextField.getText() == null ? "" : idTextField.getText();

        target.setId(id);

        if (genarateOnEntryCheckBox.isSelected()) {
            OnEntry entry = new OnEntry();
            Log log = new Log();
            log.setLabel(id);
            log.setExpr("");
            entry.addAction(log);
            target.setOnEntry(entry);
        }

        if (generateOnExitCheckBox.isSelected()) {
            OnExit onExit = new OnExit();
            Log log = new Log();
            log.setLabel(id);
            log.setExpr("");
            onExit.addAction(log);
            target.setOnExit(onExit);
        }


        StringBuffer buffer = new StringBuffer();

        if (type == PARALLEL) {
            SCXMLSerializer.serializeParallel(buffer, (Parallel) target, "");
        
        } else if (type == STATE) {
            SCXMLSerializer.serializeState(buffer, (State) target, "");
        }

        return buffer.toString();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        generateOnExitCheckBox = new javax.swing.JCheckBox();
        genarateOnEntryCheckBox = new javax.swing.JCheckBox();
        idLabel = new javax.swing.JLabel();
        idTextField = new javax.swing.JTextField();

        generateOnExitCheckBox.setText(org.openide.util.NbBundle.getMessage(StateCustomizerPanel.class, "StateCustomizerPanel.generateOnExitCheckBox.text")); // NOI18N

        genarateOnEntryCheckBox.setText(org.openide.util.NbBundle.getMessage(StateCustomizerPanel.class, "StateCustomizerPanel.genarateOnEntryCheckBox.text")); // NOI18N

        idLabel.setText(org.openide.util.NbBundle.getMessage(StateCustomizerPanel.class, "StateCustomizerPanel.idLabel.text")); // NOI18N

        idTextField.setText(org.openide.util.NbBundle.getMessage(StateCustomizerPanel.class, "StateCustomizerPanel.idTextField.text")); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(idLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(idTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(genarateOnEntryCheckBox)
                .addGap(18, 18, 18)
                .addComponent(generateOnExitCheckBox)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(idLabel)
                    .addComponent(idTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(genarateOnEntryCheckBox)
                    .addComponent(generateOnExitCheckBox))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox genarateOnEntryCheckBox;
    private javax.swing.JCheckBox generateOnExitCheckBox;
    private javax.swing.JLabel idLabel;
    private javax.swing.JTextField idTextField;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables
}
